{
  "stats": {
    "suites": 2,
    "tests": 26,
    "passes": 26,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-17T19:29:14.670Z",
    "end": "2022-07-17T19:29:17.039Z",
    "duration": 2369,
    "testsRegistered": 26,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "32c25721-f4c9-4c1b-970e-e84a323df128",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
          "title": "Reveal.me Conversation API Tests",
          "fullFile": "D:\\5. Semester\\FWE\\Reveal.Me\\reveal.me\\Backend\\reveal.me\\test\\conversationTest.spec.ts",
          "file": "\\test\\conversationTest.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 250,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    token = res.body.token;\n    userId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "6c7ff550-cd00-4a4a-9fd5-56f4477665b7",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 87,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.anotherUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    anotherUserId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "f7facad8-ba29-498d-8e97-1361c93ceffc",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 33,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/body/' + email)\n    .send(updateData_json_1.fullBodyData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.userDetail.gender).to.be.equal(updateData_json_1.fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(updateData_json_1.fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(updateData_json_1.fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(updateData_json_1.fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(updateData_json_1.fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(updateData_json_1.fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(updateData_json_1.fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(updateData_json_1.fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(updateData_json_1.fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(updateData_json_1.fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(updateData_json_1.fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(updateData_json_1.fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "bc746ba5-0cc9-43f3-a953-2e3edf589eea",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 15,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + userId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "6c7717cc-0b9a-428e-b98d-ef64f60b1a12",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 15,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + anotherUserId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "21387aeb-725d-480a-849a-119d94fd2fe8",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 24,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/conversation/remove/${conversationId}`)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "4d1cb5ff-34e8-499d-9a0a-0f97f6c32c82",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should successfully create a conversation when both swipe right",
              "fullTitle": "Reveal.me Conversation API Tests should successfully create a conversation when both swipe right",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post(`/conversation/message/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.members).to.have.members([userId, anotherUserId]);\n    conversationId = res.body._id;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "5e21c30a-4bf0-4c47-961b-4c831b82b614",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully get the picture",
              "fullTitle": "Reveal.me Conversation API Tests should successfully get the picture",
              "timedOut": false,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/conversation/user/picture/${conversationId}/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "e4ab5d6b-6ce3-4d49-acd3-508cc93d82c4",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all conversation",
              "fullTitle": "Reveal.me Conversation API Tests should successfully getting all conversation",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/allconversation`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "d1312d59-ab73-4c35-98af-338f3f275529",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all conversation from one user",
              "fullTitle": "Reveal.me Conversation API Tests should successfully getting all conversation from one user",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/allconversation/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "960343a7-2428-4931-98d1-b3b545a28089",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create a message",
              "fullTitle": "Reveal.me Conversation API Tests should successfully create a message",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = { userId: userId, message: \"testing\" };\n(0, supertest_1.default)(baseurl)\n    .post(`/message/${conversationId}`)\n    .send(message)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.sender).to.be.equal(userId);\n    expect(res.body.message).to.be.equal(message.message);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "7fa89b10-4da4-4217-8462-de8de38de62f",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting the total of all messages from a conversation",
              "fullTitle": "Reveal.me Conversation API Tests should successfully getting the total of all messages from a conversation",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/message/total/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body).to.have.members([1, 0]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "eedc823f-0d8f-4cbf-ab56-af07491c14c4",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all messages from a conversation",
              "fullTitle": "Reveal.me Conversation API Tests should successfully getting all messages from a conversation",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/message/all/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "cb38a2f0-859b-400f-a3d8-5b730480278f",
              "parentUUID": "4265d5fb-b2ab-4789-ad4b-e09728ea4986",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e21c30a-4bf0-4c47-961b-4c831b82b614",
            "e4ab5d6b-6ce3-4d49-acd3-508cc93d82c4",
            "d1312d59-ab73-4c35-98af-338f3f275529",
            "960343a7-2428-4931-98d1-b3b545a28089",
            "7fa89b10-4da4-4217-8462-de8de38de62f",
            "eedc823f-0d8f-4cbf-ab56-af07491c14c4",
            "cb38a2f0-859b-400f-a3d8-5b730480278f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 246,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "728c56a2-4509-4c59-ac08-7934354b150a",
          "title": "Reveal.me user API Tests",
          "fullFile": "D:\\5. Semester\\FWE\\Reveal.Me\\reveal.me\\Backend\\reveal.me\\test\\userTest.spec.ts",
          "file": "\\test\\userTest.spec.ts",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Reveal.me user API Tests\"",
              "fullTitle": "Reveal.me user API Tests \"after all\" hook in \"Reveal.me user API Tests\"",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + userId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "4523bb5d-55d1-41a1-af8f-1945da673422",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook in \"Reveal.me user API Tests\"",
              "fullTitle": "Reveal.me user API Tests \"after all\" hook in \"Reveal.me user API Tests\"",
              "timedOut": false,
              "duration": 16,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + anotherUserId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "02739fde-e6fd-4766-82e5-2b74c63f4291",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should successfully create a user",
              "fullTitle": "Reveal.me user API Tests should successfully create a user",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    userId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "c16718c9-190a-43ef-b4cc-c1a8ffb3cc39",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail creating the same user twice",
              "fullTitle": "Reveal.me user API Tests should fail creating the same user twice",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(405);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "eb55e6c9-63ca-4d15-bfb4-f66a7de36399",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail because password is too short",
              "fullTitle": "Reveal.me user API Tests should fail because password is too short",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.failRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "bc46b3bb-132a-4253-815f-332c5a706acc",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully logging in",
              "fullTitle": "Reveal.me user API Tests should successfully logging in",
              "timedOut": false,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login')\n    .send(login_json_1.correctCredential)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.token).not.to.be.null;\n    token = res.body.token;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "e3478d77-8323-4b54-91ec-c275d4581291",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail logging in false credential",
              "fullTitle": "Reveal.me user API Tests should fail logging in false credential",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login')\n    .send(login_json_1.falseCredential)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(400);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "60a6ba45-a298-440f-b98f-ea61ab5e9f9b",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully reset password",
              "fullTitle": "Reveal.me user API Tests should successfully reset password",
              "timedOut": false,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(forgetPassword_json_1.correctConfirmPassword)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "b6e039b5-89b3-4dd4-87a2-389229c01341",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail reset password because confirm password does not match",
              "fullTitle": "Reveal.me user API Tests should fail reset password because confirm password does not match",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(forgetPassword_json_1.falseConfirmPassword)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(400);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "fb8a6ee5-3df7-4b24-ac4a-def5f9556e43",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail reset password because new password is too short",
              "fullTitle": "Reveal.me user API Tests should fail reset password because new password is too short",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(forgetPassword_json_1.passwordTooShort)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "3d81cc1c-a786-4b41-853f-c585f83ca5a3",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update user",
              "fullTitle": "Reveal.me user API Tests should successfully update user",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/head/' + email)\n    .send(updateData_json_1.fullHeaderData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.first_name).to.be.equal(updateData_json_1.fullHeaderData.first_name);\n    expect(res.body.last_name).to.be.equal(updateData_json_1.fullHeaderData.last_name);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "2f3297f1-b57d-4a3b-a6ba-a809847bee60",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update user details",
              "fullTitle": "Reveal.me user API Tests should successfully update user details",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/body/' + email)\n    .send(updateData_json_1.fullBodyData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.userDetail.gender).to.be.equal(updateData_json_1.fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(updateData_json_1.fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(updateData_json_1.fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(updateData_json_1.fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(updateData_json_1.fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(updateData_json_1.fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(updateData_json_1.fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(updateData_json_1.fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(updateData_json_1.fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(updateData_json_1.fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(updateData_json_1.fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(updateData_json_1.fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "649546ef-cb3f-488d-8765-c6f76044d3de",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create another user",
              "fullTitle": "Reveal.me user API Tests should successfully create another user",
              "timedOut": false,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.anotherUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    anotherUserId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "d60717ee-c0b0-4b99-9fb0-68c7b852d7ae",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update oneMatchUser",
              "fullTitle": "Reveal.me user API Tests should successfully update oneMatchUser",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.oneSideMatch).to.have.members([userId]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "31a6d69d-47c4-496f-bd95-9a210fefd50b",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully remove UserId from oneMatchUser",
              "fullTitle": "Reveal.me user API Tests should successfully remove UserId from oneMatchUser",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/remove/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.oneSideMatch).to.have.members([]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "b2601723-bd95-4f11-af4a-a935dd3a068c",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully input anotherUserId in swipedLeftUser from UserId",
              "fullTitle": "Reveal.me user API Tests should successfully input anotherUserId in swipedLeftUser from UserId",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/swipedleft/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.swipedLeftUsers).to.have.members([anotherUserId]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "33e51b1c-c5c9-4faa-b636-a8a2ea37147a",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully remove anotherUserId in swipedLeftUser from UserId",
              "fullTitle": "Reveal.me user API Tests should successfully remove anotherUserId in swipedLeftUser from UserId",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/swipedleft/remove/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body).to.be.equal(anotherUserId);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "d4c2087f-e8bb-42da-97c8-6b2578f1be9a",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all user",
              "fullTitle": "Reveal.me user API Tests should successfully getting all user",
              "timedOut": false,
              "duration": 298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/alluser`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "2990f7c4-48a1-4f01-9688-d08d1134989a",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting a user",
              "fullTitle": "Reveal.me user API Tests should successfully getting a user",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/singleuser/id/${userId}`)\n    .send(updateData_json_1.fullHeaderData)\n    .send(updateData_json_1.fullBodyData)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.first_name).to.be.equal(updateData_json_1.fullHeaderData.first_name);\n    expect(res.body.last_name).to.be.equal(updateData_json_1.fullHeaderData.last_name);\n    expect(res.body.userDetail.gender).to.be.equal(updateData_json_1.fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(updateData_json_1.fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(updateData_json_1.fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(updateData_json_1.fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(updateData_json_1.fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(updateData_json_1.fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(updateData_json_1.fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(updateData_json_1.fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(updateData_json_1.fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(updateData_json_1.fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(updateData_json_1.fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(updateData_json_1.fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "022bbcdd-8f85-420f-ac82-fa754b964cc7",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting filteredUsers",
              "fullTitle": "Reveal.me user API Tests should successfully getting filteredUsers",
              "timedOut": false,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/filtereduser/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "a34d84c1-ae1e-46d0-8c90-0869447b30c1",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting genderedUser",
              "fullTitle": "Reveal.me user API Tests should successfully getting genderedUser",
              "timedOut": false,
              "duration": 297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/gendereduser/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "7b8f836b-3c1f-4833-a0fe-d1e70914f360",
              "parentUUID": "728c56a2-4509-4c59-ac08-7934354b150a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c16718c9-190a-43ef-b4cc-c1a8ffb3cc39",
            "eb55e6c9-63ca-4d15-bfb4-f66a7de36399",
            "bc46b3bb-132a-4253-815f-332c5a706acc",
            "e3478d77-8323-4b54-91ec-c275d4581291",
            "60a6ba45-a298-440f-b98f-ea61ab5e9f9b",
            "b6e039b5-89b3-4dd4-87a2-389229c01341",
            "fb8a6ee5-3df7-4b24-ac4a-def5f9556e43",
            "3d81cc1c-a786-4b41-853f-c585f83ca5a3",
            "2f3297f1-b57d-4a3b-a6ba-a809847bee60",
            "649546ef-cb3f-488d-8765-c6f76044d3de",
            "d60717ee-c0b0-4b99-9fb0-68c7b852d7ae",
            "31a6d69d-47c4-496f-bd95-9a210fefd50b",
            "b2601723-bd95-4f11-af4a-a935dd3a068c",
            "33e51b1c-c5c9-4faa-b636-a8a2ea37147a",
            "d4c2087f-e8bb-42da-97c8-6b2578f1be9a",
            "2990f7c4-48a1-4f01-9688-d08d1134989a",
            "022bbcdd-8f85-420f-ac82-fa754b964cc7",
            "a34d84c1-ae1e-46d0-8c90-0869447b30c1",
            "7b8f836b-3c1f-4833-a0fe-d1e70914f360"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1623,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test-results"
      },
      "version": "6.2.0"
    }
  }
}