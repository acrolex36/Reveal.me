{
  "stats": {
    "suites": 1,
    "tests": 27,
    "passes": 27,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-16T21:24:21.356Z",
    "end": "2022-07-16T21:24:23.032Z",
    "duration": 1676,
    "testsRegistered": 27,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c1123810-c370-43f6-bb58-2ffe412f1a64",
      "title": "",
      "fullFile": "D:\\5. Semester\\FWE\\Reveal.Me\\reveal.me\\Backend\\reveal.me\\test\\userTest.spec.ts",
      "file": "\\test\\userTest.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "217d4eb0-597f-4267-8d47-341169ad9295",
          "title": "Reveal.me API Tests",
          "fullFile": "D:\\5. Semester\\FWE\\Reveal.Me\\reveal.me\\Backend\\reveal.me\\test\\userTest.spec.ts",
          "file": "\\test\\userTest.spec.ts",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Reveal.me API Tests\"",
              "fullTitle": "Reveal.me API Tests \"after all\" hook in \"Reveal.me API Tests\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + userId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "28cd31cf-5568-4e8f-998d-95d38d053862",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should successfully create a user",
              "fullTitle": "Reveal.me API Tests should successfully create a user",
              "timedOut": false,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    userId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "65de3a8a-61ab-42b4-bf1f-b89e245d82b1",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail creating the same user twice",
              "fullTitle": "Reveal.me API Tests should fail creating the same user twice",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(405);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "11b07b7b-74aa-475e-b039-61d82d8c578e",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail because password is too short",
              "fullTitle": "Reveal.me API Tests should fail because password is too short",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(failRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "8f821707-8351-4bcb-a011-e7c7b483e475",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully logging in",
              "fullTitle": "Reveal.me API Tests should successfully logging in",
              "timedOut": false,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login')\n    .send(correctCredential)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.token).not.to.be.null;\n    token = res.body.token;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "d2768cf3-9b67-4216-875e-0549148da0a0",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail logging in false credential",
              "fullTitle": "Reveal.me API Tests should fail logging in false credential",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login')\n    .send(falseCredential)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(400);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "dc3e99de-4201-4b0e-afe7-38fc608f59c6",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully reset password",
              "fullTitle": "Reveal.me API Tests should successfully reset password",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(correctConfirmPassword)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "8397a5bb-3927-4db1-8fef-1f08dc8575a1",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail reset password because confirm password does not match",
              "fullTitle": "Reveal.me API Tests should fail reset password because confirm password does not match",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(falseConfirmPassword)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(400);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "b64723de-b055-4fc2-b5f9-63fc8f4b1b66",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail reset password because new password is too short",
              "fullTitle": "Reveal.me API Tests should fail reset password because new password is too short",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(passwordTooShort)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "6817b211-c265-4c33-b069-637ef1054dc0",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update user",
              "fullTitle": "Reveal.me API Tests should successfully update user",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/head/' + email)\n    .send(fullHeaderData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.first_name).to.be.equal(fullHeaderData.first_name);\n    expect(res.body.last_name).to.be.equal(fullHeaderData.last_name);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "41980cf5-8846-4a8d-9827-ae573d024b8f",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update user details",
              "fullTitle": "Reveal.me API Tests should successfully update user details",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/body/' + email)\n    .send(fullBodyData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.userDetail.gender).to.be.equal(fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "daf8d6cd-df81-45c8-9020-0ed80e15aa68",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create another user",
              "fullTitle": "Reveal.me API Tests should successfully create another user",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(anotherUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    anotherUserId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "1e8efcb9-cdd8-4f9a-9510-232011088ed3",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update oneMatchUser",
              "fullTitle": "Reveal.me API Tests should successfully update oneMatchUser",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.oneSideMatch).to.have.members([userId]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "2441fd2c-e653-4c23-9eea-f0e58f40b569",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully remove UserId from oneMatchUser",
              "fullTitle": "Reveal.me API Tests should successfully remove UserId from oneMatchUser",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/remove/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.oneSideMatch).to.have.members([]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "c6f5d350-1dd2-4b56-8834-97f7219f66f6",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully input anotherUserId in swipedLeftUser from UserId",
              "fullTitle": "Reveal.me API Tests should successfully input anotherUserId in swipedLeftUser from UserId",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/swipedleft/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.swipedLeftUsers).to.have.members([anotherUserId]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "d9455fec-2983-4dd5-8850-492fd3a08d80",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully remove anotherUserId in swipedLeftUser from UserId",
              "fullTitle": "Reveal.me API Tests should successfully remove anotherUserId in swipedLeftUser from UserId",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/swipedleft/remove/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body).to.be.equal(anotherUserId);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "9a73a1e1-bff5-4c22-96b3-7476b3d6741e",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all user",
              "fullTitle": "Reveal.me API Tests should successfully getting all user",
              "timedOut": false,
              "duration": 295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/alluser`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "cb3a30e8-f6c3-4b05-8197-9fe9ef628554",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting a user",
              "fullTitle": "Reveal.me API Tests should successfully getting a user",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/singleuser/id/${userId}`)\n    .send(fullHeaderData)\n    .send(fullBodyData)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.first_name).to.be.equal(fullHeaderData.first_name);\n    expect(res.body.last_name).to.be.equal(fullHeaderData.last_name);\n    expect(res.body.userDetail.gender).to.be.equal(fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "9aa790b2-817b-4840-b664-880db863a762",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting filteredUsers",
              "fullTitle": "Reveal.me API Tests should successfully getting filteredUsers",
              "timedOut": false,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/filtereduser/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "51dbe0c4-f3bf-41cd-8fa9-e8d5c7a6cbd0",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create a conversation when both swipe right",
              "fullTitle": "Reveal.me API Tests should successfully create a conversation when both swipe right",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post(`/conversation/message/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.members).to.have.members([userId, anotherUserId]);\n    conversationId = res.body._id;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "b3733185-db1d-46f7-b5f2-aa30c122b3d7",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create a conversation when both swipe right",
              "fullTitle": "Reveal.me API Tests should successfully create a conversation when both swipe right",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/conversation/isblurred/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.isBlurred).to.be.equal(false);\n    conversationId = res.body._id;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "1040e113-55cc-4ec0-8a0c-66bbb879dd5f",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all conversation",
              "fullTitle": "Reveal.me API Tests should successfully getting all conversation",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/allconversation`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "0b23f049-ed9d-4fcd-96d5-e54497c36880",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all conversation from one user",
              "fullTitle": "Reveal.me API Tests should successfully getting all conversation from one user",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/allconversation/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "118a6ae3-a035-4753-b994-07dc31baa9b5",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create a message",
              "fullTitle": "Reveal.me API Tests should successfully create a message",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = { userId: userId, message: \"testing\" };\n(0, supertest_1.default)(baseurl)\n    .post(`/message/${conversationId}`)\n    .send(message)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.sender).to.be.equal(userId);\n    expect(res.body.message).to.be.equal(message.message);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "72f49dd9-6f69-459b-8db8-b526ab0c8769",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting the total of all messages from a conversation",
              "fullTitle": "Reveal.me API Tests should successfully getting the total of all messages from a conversation",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/message/total/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body).to.have.members([1, 0]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "aecc9c10-690a-455e-9512-17a9def6f8d1",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all messages from a conversation",
              "fullTitle": "Reveal.me API Tests should successfully getting all messages from a conversation",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/message/all/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "6a0d0446-fc5c-43fe-a525-d62eb3bd81f0",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully delete conversation and messages",
              "fullTitle": "Reveal.me API Tests should successfully delete conversation and messages",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/conversation/remove/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "23d115cc-4f15-41ea-b983-47f643e77364",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully delete user",
              "fullTitle": "Reveal.me API Tests should successfully delete user",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + anotherUserId)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "a84846e5-2042-44d2-af66-555b59724fdb",
              "parentUUID": "217d4eb0-597f-4267-8d47-341169ad9295",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "65de3a8a-61ab-42b4-bf1f-b89e245d82b1",
            "11b07b7b-74aa-475e-b039-61d82d8c578e",
            "8f821707-8351-4bcb-a011-e7c7b483e475",
            "d2768cf3-9b67-4216-875e-0549148da0a0",
            "dc3e99de-4201-4b0e-afe7-38fc608f59c6",
            "8397a5bb-3927-4db1-8fef-1f08dc8575a1",
            "b64723de-b055-4fc2-b5f9-63fc8f4b1b66",
            "6817b211-c265-4c33-b069-637ef1054dc0",
            "41980cf5-8846-4a8d-9827-ae573d024b8f",
            "daf8d6cd-df81-45c8-9020-0ed80e15aa68",
            "1e8efcb9-cdd8-4f9a-9510-232011088ed3",
            "2441fd2c-e653-4c23-9eea-f0e58f40b569",
            "c6f5d350-1dd2-4b56-8834-97f7219f66f6",
            "d9455fec-2983-4dd5-8850-492fd3a08d80",
            "9a73a1e1-bff5-4c22-96b3-7476b3d6741e",
            "cb3a30e8-f6c3-4b05-8197-9fe9ef628554",
            "9aa790b2-817b-4840-b664-880db863a762",
            "51dbe0c4-f3bf-41cd-8fa9-e8d5c7a6cbd0",
            "b3733185-db1d-46f7-b5f2-aa30c122b3d7",
            "1040e113-55cc-4ec0-8a0c-66bbb879dd5f",
            "0b23f049-ed9d-4fcd-96d5-e54497c36880",
            "118a6ae3-a035-4753-b994-07dc31baa9b5",
            "72f49dd9-6f69-459b-8db8-b526ab0c8769",
            "aecc9c10-690a-455e-9512-17a9def6f8d1",
            "6a0d0446-fc5c-43fe-a525-d62eb3bd81f0",
            "23d115cc-4f15-41ea-b983-47f643e77364",
            "a84846e5-2042-44d2-af66-555b59724fdb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1628,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test-results"
      },
      "version": "6.2.0"
    }
  }
}