{
  "stats": {
    "suites": 1,
    "tests": 27,
    "passes": 27,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-16T21:37:38.224Z",
    "end": "2022-07-16T21:37:40.000Z",
    "duration": 1776,
    "testsRegistered": 27,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bc2fc63e-7b64-4bf9-9352-e9ae7926f4c0",
      "title": "",
      "fullFile": "D:\\5. Semester\\FWE\\Reveal.Me\\reveal.me\\Backend\\reveal.me\\test\\userTest.spec.ts",
      "file": "\\test\\userTest.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
          "title": "Reveal.me API Tests",
          "fullFile": "D:\\5. Semester\\FWE\\Reveal.Me\\reveal.me\\Backend\\reveal.me\\test\\userTest.spec.ts",
          "file": "\\test\\userTest.spec.ts",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Reveal.me API Tests\"",
              "fullTitle": "Reveal.me API Tests \"after all\" hook in \"Reveal.me API Tests\"",
              "timedOut": false,
              "duration": 15,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + userId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "e0da79ef-a233-4626-b16d-8b2758e233fd",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should successfully create a user",
              "fullTitle": "Reveal.me API Tests should successfully create a user",
              "timedOut": false,
              "duration": 322,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    userId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "de3c18a1-0f78-4e1d-9e61-dad4ba14adec",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail creating the same user twice",
              "fullTitle": "Reveal.me API Tests should fail creating the same user twice",
              "timedOut": false,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(405);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "aff8a440-3fc9-4f36-8f68-c78cbf15678f",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail because password is too short",
              "fullTitle": "Reveal.me API Tests should fail because password is too short",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(failRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "da0e041a-c6b2-46cd-b8a4-1c328df6b347",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully logging in",
              "fullTitle": "Reveal.me API Tests should successfully logging in",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login')\n    .send(correctCredential)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.token).not.to.be.null;\n    token = res.body.token;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "35351a25-00c5-4275-9171-08e99b9adfd8",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail logging in false credential",
              "fullTitle": "Reveal.me API Tests should fail logging in false credential",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login')\n    .send(falseCredential)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(400);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "f92d5db7-d484-4645-9be5-65300400788a",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully reset password",
              "fullTitle": "Reveal.me API Tests should successfully reset password",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(correctConfirmPassword)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "03fbd5cd-a46e-41fc-ab99-4b98fa25ce88",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail reset password because confirm password does not match",
              "fullTitle": "Reveal.me API Tests should fail reset password because confirm password does not match",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(falseConfirmPassword)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(400);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "51309c9e-e3c3-414a-91a8-70e61cb6e3f5",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail reset password because new password is too short",
              "fullTitle": "Reveal.me API Tests should fail reset password because new password is too short",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(passwordTooShort)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "cae647df-aed0-4ad3-a10e-761c9179c413",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update user",
              "fullTitle": "Reveal.me API Tests should successfully update user",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/head/' + email)\n    .send(fullHeaderData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.first_name).to.be.equal(fullHeaderData.first_name);\n    expect(res.body.last_name).to.be.equal(fullHeaderData.last_name);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "caae1601-d4c9-46ce-a529-358d2c9c964d",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update user details",
              "fullTitle": "Reveal.me API Tests should successfully update user details",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/body/' + email)\n    .send(fullBodyData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.userDetail.gender).to.be.equal(fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "7d8eb869-b08b-4a3a-ada0-09f06a929bf9",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create another user",
              "fullTitle": "Reveal.me API Tests should successfully create another user",
              "timedOut": false,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(anotherUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    anotherUserId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "950da61f-9169-4176-b274-827aa3570703",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update oneMatchUser",
              "fullTitle": "Reveal.me API Tests should successfully update oneMatchUser",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.oneSideMatch).to.have.members([userId]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "23656f55-c654-4746-bc8f-cd2550f4d48e",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully remove UserId from oneMatchUser",
              "fullTitle": "Reveal.me API Tests should successfully remove UserId from oneMatchUser",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/remove/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.oneSideMatch).to.have.members([]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "ce741a72-b593-4c00-94e9-fb185ec8388f",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully input anotherUserId in swipedLeftUser from UserId",
              "fullTitle": "Reveal.me API Tests should successfully input anotherUserId in swipedLeftUser from UserId",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/swipedleft/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.swipedLeftUsers).to.have.members([anotherUserId]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "282585a6-6e26-4d4e-8486-35dc38f80b19",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully remove anotherUserId in swipedLeftUser from UserId",
              "fullTitle": "Reveal.me API Tests should successfully remove anotherUserId in swipedLeftUser from UserId",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/swipedleft/remove/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body).to.be.equal(anotherUserId);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "fe99f201-d173-41e7-80d6-3aa33a1bfed2",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all user",
              "fullTitle": "Reveal.me API Tests should successfully getting all user",
              "timedOut": false,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/alluser`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "38ddddb4-3198-4acb-aa33-1ec6d3bfe1d3",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting a user",
              "fullTitle": "Reveal.me API Tests should successfully getting a user",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/singleuser/id/${userId}`)\n    .send(fullHeaderData)\n    .send(fullBodyData)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.first_name).to.be.equal(fullHeaderData.first_name);\n    expect(res.body.last_name).to.be.equal(fullHeaderData.last_name);\n    expect(res.body.userDetail.gender).to.be.equal(fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "d07f7d71-0081-4941-bb5f-e866b9db6b81",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting filteredUsers",
              "fullTitle": "Reveal.me API Tests should successfully getting filteredUsers",
              "timedOut": false,
              "duration": 286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/filtereduser/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "ac465f68-8216-453b-8307-11d8dc0c39d1",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create a conversation when both swipe right",
              "fullTitle": "Reveal.me API Tests should successfully create a conversation when both swipe right",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post(`/conversation/message/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.members).to.have.members([userId, anotherUserId]);\n    conversationId = res.body._id;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "a93d4f26-d268-4e30-bb40-d57e28df99aa",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create a conversation when both swipe right",
              "fullTitle": "Reveal.me API Tests should successfully create a conversation when both swipe right",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/conversation/isblurred/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.isBlurred).to.be.equal(false);\n    conversationId = res.body._id;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "ce1be0a0-f71b-43b5-b638-c2d07a69f818",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all conversation",
              "fullTitle": "Reveal.me API Tests should successfully getting all conversation",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/allconversation`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "edee1836-3b4a-4c17-8b40-5af78e49066d",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all conversation from one user",
              "fullTitle": "Reveal.me API Tests should successfully getting all conversation from one user",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/allconversation/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "5f9cd24c-c804-4833-9b68-af345b70c09d",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create a message",
              "fullTitle": "Reveal.me API Tests should successfully create a message",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = { userId: userId, message: \"testing\" };\n(0, supertest_1.default)(baseurl)\n    .post(`/message/${conversationId}`)\n    .send(message)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.sender).to.be.equal(userId);\n    expect(res.body.message).to.be.equal(message.message);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "0544f48a-f1fe-4394-b009-79058279d037",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting the total of all messages from a conversation",
              "fullTitle": "Reveal.me API Tests should successfully getting the total of all messages from a conversation",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/message/total/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body).to.have.members([1, 0]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "720342a0-f0ca-4ab7-82ed-2f7be2c7d036",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all messages from a conversation",
              "fullTitle": "Reveal.me API Tests should successfully getting all messages from a conversation",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/message/all/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "d43b12c8-8981-458c-a40d-d0b981c4ccc8",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully delete conversation and messages",
              "fullTitle": "Reveal.me API Tests should successfully delete conversation and messages",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/conversation/remove/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "0dc5dff1-b8e0-437b-ab7c-a2e58f3ea82a",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully delete user",
              "fullTitle": "Reveal.me API Tests should successfully delete user",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + anotherUserId)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "326f09e4-f33b-4db5-8c39-3fdaba53b541",
              "parentUUID": "37e1ccd9-16c1-4d38-a334-46b7a91f8977",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de3c18a1-0f78-4e1d-9e61-dad4ba14adec",
            "aff8a440-3fc9-4f36-8f68-c78cbf15678f",
            "da0e041a-c6b2-46cd-b8a4-1c328df6b347",
            "35351a25-00c5-4275-9171-08e99b9adfd8",
            "f92d5db7-d484-4645-9be5-65300400788a",
            "03fbd5cd-a46e-41fc-ab99-4b98fa25ce88",
            "51309c9e-e3c3-414a-91a8-70e61cb6e3f5",
            "cae647df-aed0-4ad3-a10e-761c9179c413",
            "caae1601-d4c9-46ce-a529-358d2c9c964d",
            "7d8eb869-b08b-4a3a-ada0-09f06a929bf9",
            "950da61f-9169-4176-b274-827aa3570703",
            "23656f55-c654-4746-bc8f-cd2550f4d48e",
            "ce741a72-b593-4c00-94e9-fb185ec8388f",
            "282585a6-6e26-4d4e-8486-35dc38f80b19",
            "fe99f201-d173-41e7-80d6-3aa33a1bfed2",
            "38ddddb4-3198-4acb-aa33-1ec6d3bfe1d3",
            "d07f7d71-0081-4941-bb5f-e866b9db6b81",
            "ac465f68-8216-453b-8307-11d8dc0c39d1",
            "a93d4f26-d268-4e30-bb40-d57e28df99aa",
            "ce1be0a0-f71b-43b5-b638-c2d07a69f818",
            "edee1836-3b4a-4c17-8b40-5af78e49066d",
            "5f9cd24c-c804-4833-9b68-af345b70c09d",
            "0544f48a-f1fe-4394-b009-79058279d037",
            "720342a0-f0ca-4ab7-82ed-2f7be2c7d036",
            "d43b12c8-8981-458c-a40d-d0b981c4ccc8",
            "0dc5dff1-b8e0-437b-ab7c-a2e58f3ea82a",
            "326f09e4-f33b-4db5-8c39-3fdaba53b541"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1720,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test-results"
      },
      "version": "6.2.0"
    }
  }
}