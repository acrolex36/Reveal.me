{
  "stats": {
    "suites": 1,
    "tests": 26,
    "passes": 26,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-17T13:14:45.510Z",
    "end": "2022-07-17T13:14:53.530Z",
    "duration": 8020,
    "testsRegistered": 26,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b6673703-864a-410e-9954-2d7edf22b772",
      "title": "",
      "fullFile": "E:\\IdeaProjects\\reveal.me\\backend\\reveal.me\\test\\userTest.spec.ts",
      "file": "\\test\\userTest.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
          "title": "Reveal.me API Tests",
          "fullFile": "E:\\IdeaProjects\\reveal.me\\backend\\reveal.me\\test\\userTest.spec.ts",
          "file": "\\test\\userTest.spec.ts",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Reveal.me API Tests\"",
              "fullTitle": "Reveal.me API Tests \"after all\" hook in \"Reveal.me API Tests\"",
              "timedOut": false,
              "duration": 79,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + userId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "d1ec9be5-9d7c-4536-8a90-6e5bf53dbc9c",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should successfully create a user",
              "fullTitle": "Reveal.me API Tests should successfully create a user",
              "timedOut": false,
              "duration": 1600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    userId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "6536f1ab-192a-49b3-973b-fd0f90363f1b",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail creating the same user twice",
              "fullTitle": "Reveal.me API Tests should fail creating the same user twice",
              "timedOut": false,
              "duration": 511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(405);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "d0d5701b-1453-4362-ae96-02561020d4b6",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail because password is too short",
              "fullTitle": "Reveal.me API Tests should fail because password is too short",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(failRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "0cfdbdb2-7180-437f-8db4-4c5e4bfc6caa",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully logging in",
              "fullTitle": "Reveal.me API Tests should successfully logging in",
              "timedOut": false,
              "duration": 756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login')\n    .send(correctCredential)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.token).not.to.be.null;\n    token = res.body.token;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "b1749d05-717e-421a-8c80-93ebe1d0de6e",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail logging in false credential",
              "fullTitle": "Reveal.me API Tests should fail logging in false credential",
              "timedOut": false,
              "duration": 582,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login')\n    .send(falseCredential)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(400);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "704dd08a-b77b-4029-9611-9402d9e69a2d",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully reset password",
              "fullTitle": "Reveal.me API Tests should successfully reset password",
              "timedOut": false,
              "duration": 455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(correctConfirmPassword)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "f56b856a-1166-4ace-91d3-5c042276b963",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail reset password because confirm password does not match",
              "fullTitle": "Reveal.me API Tests should fail reset password because confirm password does not match",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(falseConfirmPassword)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(400);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "34940bb2-e0b0-48f4-b077-40bd71faca1c",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail reset password because new password is too short",
              "fullTitle": "Reveal.me API Tests should fail reset password because new password is too short",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(passwordTooShort)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "b1c8321a-772c-491d-9ea2-c08e328af48a",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update user",
              "fullTitle": "Reveal.me API Tests should successfully update user",
              "timedOut": false,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/head/' + email)\n    .send(fullHeaderData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.first_name).to.be.equal(fullHeaderData.first_name);\n    expect(res.body.last_name).to.be.equal(fullHeaderData.last_name);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "29588007-d2b2-4bc4-a8ac-43b6e7db824d",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update user details",
              "fullTitle": "Reveal.me API Tests should successfully update user details",
              "timedOut": false,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/body/' + email)\n    .send(fullBodyData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.userDetail.gender).to.be.equal(fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "90cae839-38b0-4d98-85e9-e3c6b0e0b8b4",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create another user",
              "fullTitle": "Reveal.me API Tests should successfully create another user",
              "timedOut": false,
              "duration": 650,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(anotherUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    anotherUserId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "05bc45c8-9392-4b94-adf0-83dd2571b46e",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update oneMatchUser",
              "fullTitle": "Reveal.me API Tests should successfully update oneMatchUser",
              "timedOut": false,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.oneSideMatch).to.have.members([userId]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "3984ce78-4798-49e9-8dda-0d6a1827faeb",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully remove UserId from oneMatchUser",
              "fullTitle": "Reveal.me API Tests should successfully remove UserId from oneMatchUser",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/remove/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.oneSideMatch).to.have.members([]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "2f514620-52d8-401f-b1d1-f6eccadd6426",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully input anotherUserId in swipedLeftUser from UserId",
              "fullTitle": "Reveal.me API Tests should successfully input anotherUserId in swipedLeftUser from UserId",
              "timedOut": false,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/swipedleft/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.swipedLeftUsers).to.have.members([anotherUserId]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "013cb145-cc5e-40f6-a4f6-cd612cb4dcb5",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully remove anotherUserId in swipedLeftUser from UserId",
              "fullTitle": "Reveal.me API Tests should successfully remove anotherUserId in swipedLeftUser from UserId",
              "timedOut": false,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/swipedleft/remove/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body).to.be.equal(anotherUserId);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "1927b6a4-60de-4790-9f11-7bf7dae856db",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all user",
              "fullTitle": "Reveal.me API Tests should successfully getting all user",
              "timedOut": false,
              "duration": 808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/alluser`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "469b8e7e-80a6-4e3e-8687-0884a44c28f3",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting a user",
              "fullTitle": "Reveal.me API Tests should successfully getting a user",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/singleuser/id/${userId}`)\n    .send(fullHeaderData)\n    .send(fullBodyData)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.first_name).to.be.equal(fullHeaderData.first_name);\n    expect(res.body.last_name).to.be.equal(fullHeaderData.last_name);\n    expect(res.body.userDetail.gender).to.be.equal(fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "b7bdc87d-35bf-4ee1-9382-875845acc45c",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting filteredUsers",
              "fullTitle": "Reveal.me API Tests should successfully getting filteredUsers",
              "timedOut": false,
              "duration": 713,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/filtereduser/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "b9165b3c-0c99-4f69-87e2-d088cfac6107",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create a conversation when both swipe right",
              "fullTitle": "Reveal.me API Tests should successfully create a conversation when both swipe right",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post(`/conversation/message/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.members).to.have.members([userId, anotherUserId]);\n    conversationId = res.body._id;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "f865fe00-a627-499e-96db-eac578f7a0d5",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all conversation",
              "fullTitle": "Reveal.me API Tests should successfully getting all conversation",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/allconversation`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "9668604d-d13b-460f-a384-12a02cc5425c",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all conversation from one user",
              "fullTitle": "Reveal.me API Tests should successfully getting all conversation from one user",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/allconversation/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "91fc36e4-8914-465f-baa3-7e5f952cb120",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create a message",
              "fullTitle": "Reveal.me API Tests should successfully create a message",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = { userId: userId, message: \"testing\" };\n(0, supertest_1.default)(baseurl)\n    .post(`/message/${conversationId}`)\n    .send(message)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.sender).to.be.equal(userId);\n    expect(res.body.message).to.be.equal(message.message);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "5eecad26-a0f0-4e65-90b4-3c985876068d",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting the total of all messages from a conversation",
              "fullTitle": "Reveal.me API Tests should successfully getting the total of all messages from a conversation",
              "timedOut": false,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/message/total/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body).to.have.members([1, 0]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "d4d13db4-21ac-4af0-967d-a49c87b69e2c",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all messages from a conversation",
              "fullTitle": "Reveal.me API Tests should successfully getting all messages from a conversation",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/message/all/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "86b1fbbc-4a42-4cdc-973f-bb9b67b38375",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully delete conversation and messages",
              "fullTitle": "Reveal.me API Tests should successfully delete conversation and messages",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/conversation/remove/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "3c4a03ff-be61-4be8-aa20-38c46bdd02ae",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully delete user",
              "fullTitle": "Reveal.me API Tests should successfully delete user",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + anotherUserId)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "face47cf-09a2-42de-8dd4-9ace756b92ea",
              "parentUUID": "8d3adb00-7e10-4f06-b08d-a1b6380eced5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6536f1ab-192a-49b3-973b-fd0f90363f1b",
            "d0d5701b-1453-4362-ae96-02561020d4b6",
            "0cfdbdb2-7180-437f-8db4-4c5e4bfc6caa",
            "b1749d05-717e-421a-8c80-93ebe1d0de6e",
            "704dd08a-b77b-4029-9611-9402d9e69a2d",
            "f56b856a-1166-4ace-91d3-5c042276b963",
            "34940bb2-e0b0-48f4-b077-40bd71faca1c",
            "b1c8321a-772c-491d-9ea2-c08e328af48a",
            "29588007-d2b2-4bc4-a8ac-43b6e7db824d",
            "90cae839-38b0-4d98-85e9-e3c6b0e0b8b4",
            "05bc45c8-9392-4b94-adf0-83dd2571b46e",
            "3984ce78-4798-49e9-8dda-0d6a1827faeb",
            "2f514620-52d8-401f-b1d1-f6eccadd6426",
            "013cb145-cc5e-40f6-a4f6-cd612cb4dcb5",
            "1927b6a4-60de-4790-9f11-7bf7dae856db",
            "469b8e7e-80a6-4e3e-8687-0884a44c28f3",
            "b7bdc87d-35bf-4ee1-9382-875845acc45c",
            "b9165b3c-0c99-4f69-87e2-d088cfac6107",
            "f865fe00-a627-499e-96db-eac578f7a0d5",
            "9668604d-d13b-460f-a384-12a02cc5425c",
            "91fc36e4-8914-465f-baa3-7e5f952cb120",
            "5eecad26-a0f0-4e65-90b4-3c985876068d",
            "d4d13db4-21ac-4af0-967d-a49c87b69e2c",
            "86b1fbbc-4a42-4cdc-973f-bb9b67b38375",
            "3c4a03ff-be61-4be8-aa20-38c46bdd02ae",
            "face47cf-09a2-42de-8dd4-9ace756b92ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7097,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test-results"
      },
      "version": "6.2.0"
    }
  }
}