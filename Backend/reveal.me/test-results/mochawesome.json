{
  "stats": {
    "suites": 2,
    "tests": 25,
    "passes": 25,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-17T19:17:20.996Z",
    "end": "2022-07-17T19:17:22.997Z",
    "duration": 2001,
    "testsRegistered": 25,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "570fc154-9f70-435a-82bb-eda03f9f8f4b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0b057b22-8f08-4175-909a-353d098271e2",
          "title": "Reveal.me Conversation API Tests",
          "fullFile": "D:\\5. Semester\\FWE\\Reveal.Me\\reveal.me\\Backend\\reveal.me\\test\\conversationTest.spec.ts",
          "file": "\\test\\conversationTest.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 255,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    token = res.body.token;\n    userId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "5bd4712d-7d61-4485-8d81-d73930157794",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 91,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.anotherUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    anotherUserId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "07088706-0993-41b7-a0e5-e3d2afeb7953",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"before all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 51,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/body/' + email)\n    .send(updateData_json_1.fullBodyData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.userDetail.gender).to.be.equal(updateData_json_1.fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(updateData_json_1.fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(updateData_json_1.fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(updateData_json_1.fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(updateData_json_1.fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(updateData_json_1.fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(updateData_json_1.fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(updateData_json_1.fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(updateData_json_1.fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(updateData_json_1.fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(updateData_json_1.fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(updateData_json_1.fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "c5962d7c-6b29-4656-8a79-1cb8af889acc",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 21,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + userId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "c50e0cfa-1984-4bc2-ba78-ed91cac2c41c",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 21,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + anotherUserId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "8a334ad6-9969-4742-a8ba-a8e426532f4e",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "fullTitle": "Reveal.me Conversation API Tests \"after all\" hook in \"Reveal.me Conversation API Tests\"",
              "timedOut": false,
              "duration": 37,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/conversation/remove/${conversationId}`)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "78817b36-ff0f-42ab-a3ad-515387371f07",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should successfully create a conversation when both swipe right",
              "fullTitle": "Reveal.me Conversation API Tests should successfully create a conversation when both swipe right",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post(`/conversation/message/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.members).to.have.members([userId, anotherUserId]);\n    conversationId = res.body._id;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "061c8088-c905-4650-9bf9-1e6152b33380",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully get the picture",
              "fullTitle": "Reveal.me Conversation API Tests should successfully get the picture",
              "timedOut": false,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/conversation/user/picture/${conversationId}/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "ed227627-116b-49fa-9bc3-39805630d976",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all conversation",
              "fullTitle": "Reveal.me Conversation API Tests should successfully getting all conversation",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/allconversation`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "fca76c19-4774-4fe4-a7ef-b8343b136a2c",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all conversation from one user",
              "fullTitle": "Reveal.me Conversation API Tests should successfully getting all conversation from one user",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/allconversation/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "2d64709f-5165-4379-8afa-8d6efcbadaac",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create a message",
              "fullTitle": "Reveal.me Conversation API Tests should successfully create a message",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = { userId: userId, message: \"testing\" };\n(0, supertest_1.default)(baseurl)\n    .post(`/message/${conversationId}`)\n    .send(message)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.sender).to.be.equal(userId);\n    expect(res.body.message).to.be.equal(message.message);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "325285c8-69f3-4c13-bdca-df9a509919f4",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting the total of all messages from a conversation",
              "fullTitle": "Reveal.me Conversation API Tests should successfully getting the total of all messages from a conversation",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/message/total/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body).to.have.members([1, 0]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "720dcff6-ea61-439b-b05a-4d45997328c2",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all messages from a conversation",
              "fullTitle": "Reveal.me Conversation API Tests should successfully getting all messages from a conversation",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/message/all/${conversationId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "05abbbcf-d188-4620-b533-5dac9bae5cd3",
              "parentUUID": "0b057b22-8f08-4175-909a-353d098271e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "061c8088-c905-4650-9bf9-1e6152b33380",
            "ed227627-116b-49fa-9bc3-39805630d976",
            "fca76c19-4774-4fe4-a7ef-b8343b136a2c",
            "2d64709f-5165-4379-8afa-8d6efcbadaac",
            "325285c8-69f3-4c13-bdca-df9a509919f4",
            "720dcff6-ea61-439b-b05a-4d45997328c2",
            "05abbbcf-d188-4620-b533-5dac9bae5cd3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 234,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "73685d06-5e71-4517-872e-75a7b62693e2",
          "title": "Reveal.me user API Tests",
          "fullFile": "D:\\5. Semester\\FWE\\Reveal.Me\\reveal.me\\Backend\\reveal.me\\test\\userTest.spec.ts",
          "file": "\\test\\userTest.spec.ts",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Reveal.me user API Tests\"",
              "fullTitle": "Reveal.me user API Tests \"after all\" hook in \"Reveal.me user API Tests\"",
              "timedOut": false,
              "duration": 16,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + userId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "a74fdb45-54d9-4f79-9f99-319ab82d9b60",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook in \"Reveal.me user API Tests\"",
              "fullTitle": "Reveal.me user API Tests \"after all\" hook in \"Reveal.me user API Tests\"",
              "timedOut": false,
              "duration": 13,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/user/\" + anotherUserId)\n    .set(({ \"Authorization\": `Bearer ${token}` }))\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "ee499365-97f9-415a-94c3-191827671d76",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should successfully create a user",
              "fullTitle": "Reveal.me user API Tests should successfully create a user",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    userId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "47ce1962-fe92-477b-898f-0624cc5011e3",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail creating the same user twice",
              "fullTitle": "Reveal.me user API Tests should fail creating the same user twice",
              "timedOut": false,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.successfulRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(405);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "ab2c14b5-54b1-48fd-bd83-df16cd5b0186",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail because password is too short",
              "fullTitle": "Reveal.me user API Tests should fail because password is too short",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.failRegister)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "a90526bd-9679-4af3-83ad-bca139c74984",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully logging in",
              "fullTitle": "Reveal.me user API Tests should successfully logging in",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login')\n    .send(login_json_1.correctCredential)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.token).not.to.be.null;\n    token = res.body.token;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "81e3b7d4-813e-40ae-95b1-a4c0a5afabea",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail logging in false credential",
              "fullTitle": "Reveal.me user API Tests should fail logging in false credential",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login')\n    .send(login_json_1.falseCredential)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(400);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "7cc8ea74-ef7d-444e-b6f7-892916bbdbd6",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully reset password",
              "fullTitle": "Reveal.me user API Tests should successfully reset password",
              "timedOut": false,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(forgetPassword_json_1.correctConfirmPassword)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "75908ec9-55ea-4de7-9735-41bd4aeed7fc",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail reset password because confirm password does not match",
              "fullTitle": "Reveal.me user API Tests should fail reset password because confirm password does not match",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(forgetPassword_json_1.falseConfirmPassword)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(400);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "f8cfa961-ae18-43d9-b317-ddc77a418dff",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail reset password because new password is too short",
              "fullTitle": "Reveal.me user API Tests should fail reset password because new password is too short",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/login/forgetpassword')\n    .send(forgetPassword_json_1.passwordTooShort)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "616ee3e9-7324-4b43-ba06-9e289ec93b11",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update user",
              "fullTitle": "Reveal.me user API Tests should successfully update user",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/head/' + email)\n    .send(updateData_json_1.fullHeaderData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.first_name).to.be.equal(updateData_json_1.fullHeaderData.first_name);\n    expect(res.body.last_name).to.be.equal(updateData_json_1.fullHeaderData.last_name);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "6598f420-1bd6-43c4-bc77-d8850136e124",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update user details",
              "fullTitle": "Reveal.me user API Tests should successfully update user details",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put('/user/profile/body/' + email)\n    .send(updateData_json_1.fullBodyData)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.userDetail.gender).to.be.equal(updateData_json_1.fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(updateData_json_1.fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(updateData_json_1.fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(updateData_json_1.fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(updateData_json_1.fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(updateData_json_1.fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(updateData_json_1.fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(updateData_json_1.fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(updateData_json_1.fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(updateData_json_1.fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(updateData_json_1.fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(updateData_json_1.fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "e8d46687-77a4-44d1-8371-e863cab20e15",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully create another user",
              "fullTitle": "Reveal.me user API Tests should successfully create another user",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .post('/auth/register')\n    .send(register_json_1.anotherUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(201);\n    expect(res.body.userId).not.to.be.null;\n    anotherUserId = res.body.userId;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "56a65590-c8d6-4a15-86c6-46b50cb66c2d",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully update oneMatchUser",
              "fullTitle": "Reveal.me user API Tests should successfully update oneMatchUser",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.oneSideMatch).to.have.members([userId]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "7b84bd4b-b23b-4050-9694-92956ebb9fd2",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully remove UserId from oneMatchUser",
              "fullTitle": "Reveal.me user API Tests should successfully remove UserId from oneMatchUser",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/remove/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.oneSideMatch).to.have.members([]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "bd9b37ec-e9a2-460b-9085-e9132087f226",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully input anotherUserId in swipedLeftUser from UserId",
              "fullTitle": "Reveal.me user API Tests should successfully input anotherUserId in swipedLeftUser from UserId",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/swipedleft/id/${userId}/${anotherUserId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.swipedLeftUsers).to.have.members([anotherUserId]);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "982f86d3-95e0-42cc-a380-3f92620cac5a",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully remove anotherUserId in swipedLeftUser from UserId",
              "fullTitle": "Reveal.me user API Tests should successfully remove anotherUserId in swipedLeftUser from UserId",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .put(`/user/profile/swipedleft/remove/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body).to.be.equal(anotherUserId);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "eb5d1a80-7225-4fe3-ac62-c7d6f80c9081",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting all user",
              "fullTitle": "Reveal.me user API Tests should successfully getting all user",
              "timedOut": false,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/alluser`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "8f08c01b-8587-42d0-9fa7-cfaed480fb9c",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting a user",
              "fullTitle": "Reveal.me user API Tests should successfully getting a user",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/singleuser/id/${userId}`)\n    .send(updateData_json_1.fullHeaderData)\n    .send(updateData_json_1.fullBodyData)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    expect(res.body.first_name).to.be.equal(updateData_json_1.fullHeaderData.first_name);\n    expect(res.body.last_name).to.be.equal(updateData_json_1.fullHeaderData.last_name);\n    expect(res.body.userDetail.gender).to.be.equal(updateData_json_1.fullBodyData.gender);\n    expect(res.body.userDetail.gender_interest).to.have.members(updateData_json_1.fullBodyData.gender_interest);\n    expect(res.body.userDetail.age).to.be.equal(updateData_json_1.fullBodyData.age);\n    expect(res.body.userDetail.profile_picture).to.be.equal(updateData_json_1.fullBodyData.profile_picture);\n    expect(res.body.userDetail.dob_date).to.be.equal(updateData_json_1.fullBodyData.dob_date);\n    expect(res.body.userDetail.dob_month).to.be.equal(updateData_json_1.fullBodyData.dob_month);\n    expect(res.body.userDetail.dob_year).to.be.equal(updateData_json_1.fullBodyData.dob_year);\n    expect(res.body.userDetail.height).to.be.equal(updateData_json_1.fullBodyData.height);\n    expect(res.body.userDetail.nationality).to.be.equal(updateData_json_1.fullBodyData.nationality);\n    expect(res.body.userDetail.occupation).to.be.equal(updateData_json_1.fullBodyData.occupation);\n    expect(res.body.userDetail.hobbies).to.have.members(updateData_json_1.fullBodyData.hobbies);\n    expect(res.body.userDetail.languages).to.have.members(updateData_json_1.fullBodyData.languages);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "c997ab63-3e70-469f-a388-f555c6384705",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully getting filteredUsers",
              "fullTitle": "Reveal.me user API Tests should successfully getting filteredUsers",
              "timedOut": false,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(baseurl)\n    .get(`/filtereduser/id/${userId}`)\n    .set(\"Authorization\", \"Bearer \" + token)\n    .end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
              "err": {},
              "uuid": "204e0c1b-3efd-4ab3-82e1-4fc915cfb658",
              "parentUUID": "73685d06-5e71-4517-872e-75a7b62693e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47ce1962-fe92-477b-898f-0624cc5011e3",
            "ab2c14b5-54b1-48fd-bd83-df16cd5b0186",
            "a90526bd-9679-4af3-83ad-bca139c74984",
            "81e3b7d4-813e-40ae-95b1-a4c0a5afabea",
            "7cc8ea74-ef7d-444e-b6f7-892916bbdbd6",
            "75908ec9-55ea-4de7-9735-41bd4aeed7fc",
            "f8cfa961-ae18-43d9-b317-ddc77a418dff",
            "616ee3e9-7324-4b43-ba06-9e289ec93b11",
            "6598f420-1bd6-43c4-bc77-d8850136e124",
            "e8d46687-77a4-44d1-8371-e863cab20e15",
            "56a65590-c8d6-4a15-86c6-46b50cb66c2d",
            "7b84bd4b-b23b-4050-9694-92956ebb9fd2",
            "bd9b37ec-e9a2-460b-9085-e9132087f226",
            "982f86d3-95e0-42cc-a380-3f92620cac5a",
            "eb5d1a80-7225-4fe3-ac62-c7d6f80c9081",
            "8f08c01b-8587-42d0-9fa7-cfaed480fb9c",
            "c997ab63-3e70-469f-a388-f555c6384705",
            "204e0c1b-3efd-4ab3-82e1-4fc915cfb658"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test-results"
      },
      "version": "6.2.0"
    }
  }
}